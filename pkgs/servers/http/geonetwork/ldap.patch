Index: web/src/main/java/org/fao/geonet/services/config/Set.java
===================================================================
--- web/src/main/java/org/fao/geonet/services/config/Set.java	(revision 9269)
+++ web/src/main/java/org/fao/geonet/services/config/Set.java	(working copy)
@@ -156,6 +156,9 @@
         new ConfigEntry(ConfigEntry.Type.STRING, true,  "ldap/uidAttr",                 "system/ldap/uidAttr"),        
 		new ConfigEntry(ConfigEntry.Type.STRING, true,  "ldap/distinguishedNames/base", "system/ldap/distinguishedNames/base"),
 		new ConfigEntry(ConfigEntry.Type.STRING, true,  "ldap/distinguishedNames/users","system/ldap/distinguishedNames/users"),
+		new ConfigEntry(ConfigEntry.Type.BOOL,   true,  "ldap/anonBind",                "system/ldap/anonBind"),
+		new ConfigEntry(ConfigEntry.Type.STRING, false, "ldap/bind/bindDn",             "system/ldap/bind/bindDn"),
+		new ConfigEntry(ConfigEntry.Type.STRING, false, "ldap/bind/bindPw",             "system/ldap/bind/bindPw"),
 		new ConfigEntry(ConfigEntry.Type.STRING, true,  "ldap/userAttribs/name",        "system/ldap/userAttribs/name"),
 		new ConfigEntry(ConfigEntry.Type.STRING, true,  "ldap/userAttribs/password",    "system/ldap/userAttribs/password"),
 		new ConfigEntry(ConfigEntry.Type.STRING, false, "ldap/userAttribs/profile",     "system/ldap/userAttribs/profile"),
Index: web/src/main/java/org/fao/geonet/services/login/LDAPContext.java
===================================================================
--- web/src/main/java/org/fao/geonet/services/login/LDAPContext.java	(revision 9269)
+++ web/src/main/java/org/fao/geonet/services/login/LDAPContext.java	(working copy)
@@ -53,6 +53,9 @@
 		defProfile    = sm.getValue      (prefix +"/defaultProfile");
 		baseDN        = sm.getValue      (prefix +"/distinguishedNames/base");
 		usersDN       = sm.getValue      (prefix +"/distinguishedNames/users");
+        anonBind      = sm.getValueAsBool(prefix +"/anonBind") ; 
+        bindDN        = sm.getValue      (prefix +"/bind/bindDn") ; 
+        bindPW        = sm.getValue      (prefix +"/bind/bindPw") ; 
 		nameAttr      = sm.getValue      (prefix +"/userAttribs/name");
 		profileAttr   = sm.getValue      (prefix +"/userAttribs/profile");
 		emailAttr     = "mail";  //TODO make it configurable
@@ -89,7 +92,17 @@
             String path = null;
 
             try {
-                path = LDAPUtil.findUserDN(getUrl(), uidFilter, usersBaseDN);
+				if (anonBind) { 
+					// if the directory allows anonymous searches, don't bother
+					// providing credentials.
+					path = LDAPUtil.findUserDN(getUrl(), uidFilter, usersBaseDN);
+				}
+				else
+				{
+					// search the directory using the credentials provided
+					// in the configuration.
+					path = LDAPUtil.findUserDN(getUrl(), uidFilter, usersBaseDN, bindDN, bindPW) ; 
+				}
             } catch (NamingException ex) {
                 Log.warning(Geonet.LDAP, ex.getMessage());
             }
@@ -98,6 +111,7 @@
                 path = uidAttr + "="+ username +","+ usersDN +","+ baseDN;
             }
 
+			// (Re)bind against the directory as the actual user.
 			DirContext dc   = LDAPUtil.openContext(getUrl(), path, password);
 
 			Map<String, ? extends List<Object>> attr = LDAPUtil.getNodeInfo(dc, path);
@@ -179,11 +193,14 @@
 	//--------------------------------------------------------------------------
 
 	private boolean use;
+	private boolean anonBind ; 
 	private String  host;
 	private Integer port;
 	private String  defProfile;
 	private String  baseDN;
 	private String  usersDN;
+    private String  bindDN ; 
+	private String  bindPW ; 
 	private String  nameAttr;
 	private String  profileAttr;
 	private String  emailAttr;
Index: web/src/main/java/org/fao/geonet/services/login/LDAPUtil.java
===================================================================
--- web/src/main/java/org/fao/geonet/services/login/LDAPUtil.java	(revision 9269)
+++ web/src/main/java/org/fao/geonet/services/login/LDAPUtil.java	(working copy)
@@ -74,6 +74,31 @@
 		}
 	}
 
+	public static String findUserDN(String url, String uidFilter, String userDN, String bindDN, String bindPW) throws NamingException
+	{
+		DirContext connection = null ; 
+		try 
+		{
+			connection = openContext(url, bindDN, bindPW) ; 
+		} 
+		catch (NamingException e) 
+		{
+			Log.warning(Geonet.LDAP, "Cannot bind to directory using : " + bindDN) ; 
+			throw e ; 
+		}
+
+		try
+		{
+			return findUserDN(connection, uidFilter, userDN) ; 
+		}
+		catch(NamingException e)
+		{
+			// we don't have anything to add to the log message emitted 
+			// by the function in the try block.
+			throw e;
+		}
+	}
+
 	public static String findUserDN(String url, String uidFilter, String userDN) throws NamingException
 	{
 		try
@@ -82,6 +107,18 @@
 			DirContext dc = new InitialDirContext(env);
 			DirContext connection = (DirContext) dc.lookup(url);
 
+			return findUserDN(connection, uidFilter, userDN) ; 
+		}
+		catch(NamingException e)
+		{
+			throw e;
+		}
+	}
+
+	private static String findUserDN(DirContext connection, String uidFilter, String userDN) throws NamingException
+	{
+		try
+		{
 			NamingEnumeration<SearchResult> results = connection.search(userDN, uidFilter, null);
 
 
@@ -92,9 +129,10 @@
 
 			return usersRealDN;
 		}
-		catch(NamingException e)
+		catch (NamingException e)
 		{
-			throw e;
+			Log.warning(Geonet.LDAP, "Unable to locate user with filter : " + uidFilter) ;
+			throw e ; 
 		}
 	}
 
